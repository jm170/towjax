<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1\bin\Debug\TowJax 2.0.exe">
   <Modules>
    <Module Name="towjax 2.0.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'TowJax 2.0.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="0" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
       <Issue Name="AssemblyMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than assembly name 'TowJax 2.0.exe'.</Issue>
      </Message>
      <Message Id="Jax" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Jax' in assembly name 'TowJax 2.0.exe'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'TowJax 2.0.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'TowJax 2.0.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="CustomerSQLite">
       <Types>
        <Type Name="Form2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.TryParse(System.String,System.DateTime@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="36">'Form2.Form2()' calls 'DateTime.TryParse(string, out DateTime)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Decimal.TryParse(System.String,System.Decimal@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="50">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="53">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="58">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="61">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="71">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="77">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="83">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="92">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="98">'Form2.Form2()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="33">'Form2.Form2()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="149">In method 'Form2.button1_Click(object, EventArgs)', object 'modconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'modconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="151">In method 'Form2.button1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'modentry' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="145">Method 'Form2.button1_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="145">Method 'Form2.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="145">Change 'Form2.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="621">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add. Winch".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="569">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CCR/Case".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="691">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Car/Truck/Van".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="601">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Certified Mail".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="254">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Color".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="611">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Crash Film".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="200">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "First Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="470">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Labor Charge".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="209">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Last Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="350">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lien Holder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="367">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot/Keys".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="218">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Make".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="227">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Model".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="764">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Modify Existing Entry".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="680">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Motorcycle".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="290">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Notes/Services".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="461">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Other Charges (1)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="422">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Other Charges (2)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="334">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Owner Address".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="318">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Owner City/ZIP".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="245">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Phone #1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="663">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Reason for Tow".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="299">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Release Date".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="158">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save Changes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="553">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TAG#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="585">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tag State/Expire".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="272">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tow Date".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="537">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tow Location".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="515">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Towing Miles".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="263">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "VIN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="631">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Vehicle Towable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="647">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Vehicle on HOLD".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="383">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Wrecker Driver".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="399">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Wrecker#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="236">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Year".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DateTimePicker.set_CustomFormat(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="164">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DateTimePicker.CustomFormat.set(string)'. Retrieve the following string(s) from a resource table instead: "M/d/yy HH:mm".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="303">Method 'Form2.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DateTimePicker.CustomFormat.set(string)'. Retrieve the following string(s) from a resource table instead: "M/d/yy HH:mm".</Issue>
            </Message>
            <Message Id="yy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="164">Correct the spelling of the unrecognized token 'yy' in the literal '"M/d/yy HH:mm"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.Designer.cs" Line="303">Correct the spelling of the unrecognized token 'yy' in the literal '"M/d/yy HH:mm"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBox9_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form2.cs" Line="121">'Form2.textBox9_KeyPress(object, KeyPressEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WindowsFormsApplication1">
       <Types>
        <Type Name="Form1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="129">In method 'Form1.Form1()', object 'conx2' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'conx2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="28">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'conx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="80">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'conx1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="31">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="83">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="131">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'getrate1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="141">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'getrate2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="151">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'getrate3' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="161">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'getrate4' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="171">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'getrate5' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="181">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'getrate6' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="191">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'getrate7' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="30">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="82">In method 'Form1.Form1()', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="148">Object 'conx2' can be disposed more than once in method 'Form1.Form1()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 148, 158, 168, 178, 188, 198</Issue>
            </Message>
            <Message Id="System.Decimal.TryParse(System.String,System.Decimal@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="136">'Form1.Form1()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="146">'Form1.Form1()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="156">'Form1.Form1()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="166">'Form1.Form1()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="176">'Form1.Form1()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="186">'Form1.Form1()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="196">'Form1.Form1()' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="conx1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="80">'Form1.Form1()' declares a variable, 'conx1', of type 'SQLiteConnection', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="83">Be sure to set the DataTable Locale property wherever 'Form1.Form1()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#admin2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.admin2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bikeday2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bikeday" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bikeday' in member name 'Form1.bikeday2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.bikeday2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="330">In method 'Form1.button1_Click(object, EventArgs)', object 'conx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'conx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="382">In method 'Form1.button1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'conx1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="385">In method 'Form1.button1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="332">In method 'Form1.button1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'newentry' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="384">In method 'Form1.button1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="327">Method 'Form1.button1_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "New Entry Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="327">Method 'Form1.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to create this new entry?".</Issue>
            </Message>
            <Message Id="conx1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="382">'Form1.button1_Click(object, EventArgs)' declares a variable, 'conx1', of type 'SQLiteConnection', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="385">Be sure to set the DataTable Locale property wherever 'Form1.button1_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="327">Change 'Form1.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button10_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="804">In method 'Form1.button10_Click(object, EventArgs)', object 'rateconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rateconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="805">In method 'Form1.button10_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'ratemod' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="801">Method 'Form1.button10_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="801">Method 'Form1.button10_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="801">Change 'Form1.button10_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button11_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="826">In method 'Form1.button11_Click(object, EventArgs)', object 'rateconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rateconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="827">In method 'Form1.button11_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'ratemod' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="823">Method 'Form1.button11_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="823">Method 'Form1.button11_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="823">Change 'Form1.button11_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button12_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="848">In method 'Form1.button12_Click(object, EventArgs)', object 'rateconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rateconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="849">In method 'Form1.button12_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'ratemod' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="845">Method 'Form1.button12_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="845">Method 'Form1.button12_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="845">Change 'Form1.button12_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button13_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="868">In method 'Form1.button13_Click(object, EventArgs)', object 'rateconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rateconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="869">In method 'Form1.button13_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'ratemod' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="865">Method 'Form1.button13_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="865">Method 'Form1.button13_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="865">Change 'Form1.button13_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button14_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="908">In method 'Form1.button14_Click(object, EventArgs)', object 'rateconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rateconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="909">In method 'Form1.button14_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'ratemod' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="905">Method 'Form1.button14_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="905">Method 'Form1.button14_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="905">Change 'Form1.button14_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button15_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="931">In method 'Form1.button15_Click(object, EventArgs)', object 'rateconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rateconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="932">In method 'Form1.button15_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'ratemod' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="928">Method 'Form1.button15_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="928">Method 'Form1.button15_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="928">Change 'Form1.button15_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button16_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.TryParse(System.String,System.DateTime@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="595">'Form1.button16_Click(object, EventArgs)' calls 'DateTime.TryParse(string, out DateTime)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="597">'Form1.button16_Click(object, EventArgs)' calls 'DateTime.TryParse(string, out DateTime)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Decimal.TryParse(System.String,System.Decimal@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="580">'Form1.button16_Click(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="603">'Form1.button16_Click(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="611">'Form1.button16_Click(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="621">'Form1.button16_Click(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="633">'Form1.button16_Click(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="565">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Decimal.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="577">Because the behavior of 'decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(IFormatProvider)'. If the result of 'decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="609">Because the behavior of 'decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(IFormatProvider)'. If the result of 'decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="687">Because the behavior of 'decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(IFormatProvider)'. If the result of 'decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="585">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="586">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="608">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="614">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="630">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="681">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="686">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="713">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="716">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="719">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="602">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="571">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button16_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button17_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="888">In method 'Form1.button17_Click(object, EventArgs)', object 'rateconx' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rateconx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="889">In method 'Form1.button17_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'ratemod' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="885">Method 'Form1.button17_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Edit Confirmation".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="885">Method 'Form1.button17_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Are you sure you want to make these changes?".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="885">Change 'Form1.button17_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="457">In method 'Form1.button2_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'conx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="460">In method 'Form1.button2_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="459">In method 'Form1.button2_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="button" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="455">Correct the casing of 'button' in member name 'Form1.button2_Click(object, EventArgs)' by changing it to 'Button'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="455">Remove the underscores from member name 'Form1.button2_Click(object, EventArgs)'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="460">Be sure to set the DataTable Locale property wherever 'Form1.button2_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1377">In method 'Form1.button3_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1378">In method 'Form1.button3_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1378">Be sure to set the DataTable Locale property wherever 'Form1.button3_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1368">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button3_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1557">In method 'Form1.button4_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'conx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1560">In method 'Form1.button4_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1553">In method 'Form1.button4_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'f2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1559">In method 'Form1.button4_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1560">Be sure to set the DataTable Locale property wherever 'Form1.button4_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button5_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1260">In method 'Form1.button5_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1316">In method 'Form1.button5_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1261">In method 'Form1.button5_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1317">In method 'Form1.button5_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1317">Be sure to set the DataTable Locale property wherever 'Form1.button5_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1251">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button5_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1308">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button5_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button6_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1028">In method 'Form1.button6_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1085">In method 'Form1.button6_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1029">In method 'Form1.button6_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1086">In method 'Form1.button6_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1086">Be sure to set the DataTable Locale property wherever 'Form1.button6_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1019">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button6_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1076">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button6_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button7_Click_1(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1144">In method 'Form1.button7_Click_1(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1200">In method 'Form1.button7_Click_1(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1145">In method 'Form1.button7_Click_1(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1201">In method 'Form1.button7_Click_1(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1201">Be sure to set the DataTable Locale property wherever 'Form1.button7_Click_1(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1135">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button7_Click_1(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1192">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button7_Click_1(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button8_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="968">In method 'Form1.button8_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="969">In method 'Form1.button8_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="969">Be sure to set the DataTable Locale property wherever 'Form1.button8_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="959">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button8_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button9_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="750">In method 'Form1.button9_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'myda' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="751">In method 'Form1.button9_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'vt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="751">Be sure to set the DataTable Locale property wherever 'Form1.button9_Click(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="741">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Form1.button9_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#crash2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.crash2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edccrcase" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edccrcase" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edccrcase' in member name 'Form1.edccrcase' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edccrcase' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edcertmail" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edcertmail" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edcertmail' in member name 'Form1.edcertmail' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edcertmail' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edcharge1desc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'desc' in member name 'Form1.edcharge1desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="edcharge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edcharge' in member name 'Form1.edcharge1desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edcharge1desc' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edcharge2desc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'desc' in member name 'Form1.edcharge2desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="edcharge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edcharge' in member name 'Form1.edcharge2desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edcharge2desc' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edcrashfilm" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edcrashfilm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edcrashfilm' in member name 'Form1.edcrashfilm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edcrashfilm' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#eddate" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="eddate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'eddate' in member name 'Form1.eddate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.eddate' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#eddaterelease" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="eddaterelease" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'eddaterelease' in member name 'Form1.eddaterelease' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.eddaterelease' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edfirst" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edfirst" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edfirst' in member name 'Form1.edfirst' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edfirst' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edid" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edid' in member name 'Form1.edid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edid' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edisbike" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edisbike" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edisbike' in member name 'Form1.edisbike' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edisbike' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ediscar" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ediscar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ediscar' in member name 'Form1.ediscar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.ediscar' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edlaborcharge" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edlaborcharge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edlaborcharge' in member name 'Form1.edlaborcharge' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edlaborcharge' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edlast" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edlast" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edlast' in member name 'Form1.edlast' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edlast' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edlienholder" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edlienholder" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edlienholder' in member name 'Form1.edlienholder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edlienholder' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edlotkeys" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edlotkeys" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edlotkeys' in member name 'Form1.edlotkeys' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edlotkeys' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edmake" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edmake" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edmake' in member name 'Form1.edmake' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edmake' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edmodel" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edmodel" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edmodel' in member name 'Form1.edmodel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edmodel' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ednotes" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ednotes" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ednotes' in member name 'Form1.ednotes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.ednotes' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edother1charge" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edother" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edother' in member name 'Form1.edother1charge' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edother1charge' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edother2charge" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edother" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edother' in member name 'Form1.edother2charge' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edother2charge' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edownadd" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edownadd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edownadd' in member name 'Form1.edownadd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edownadd' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edowncit" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edowncit" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edowncit' in member name 'Form1.edowncit' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edowncit' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edph1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edph" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edph' in member name 'Form1.edph1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edph1' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edph2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edph" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edph' in member name 'Form1.edph2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edph2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edtagex" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edtagex" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edtagex' in member name 'Form1.edtagex' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edtagex' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edtagn" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edtagn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edtagn' in member name 'Form1.edtagn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edtagn' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edtowable" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edtowable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edtowable' in member name 'Form1.edtowable' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edtowable' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edtowaddress" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edtowaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edtowaddress' in member name 'Form1.edtowaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edtowaddress' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edtowhold" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edtowhold" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edtowhold' in member name 'Form1.edtowhold' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edtowhold' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edtowmiles" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edtowmiles" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edtowmiles' in member name 'Form1.edtowmiles' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edtowmiles' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edtowreason" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edtowreason" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edtowreason' in member name 'Form1.edtowreason' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edtowreason' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edvin" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edvin" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edvin' in member name 'Form1.edvin' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edvin' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edwinched" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edwinched" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edwinched' in member name 'Form1.edwinched' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edwinched' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edwreckdriver" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edwreckdriver" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edwreckdriver' in member name 'Form1.edwreckdriver' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edwreckdriver' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edwrecknum" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edwrecknum" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edwrecknum' in member name 'Form1.edwrecknum' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edwrecknum' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#edyear" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="edyear" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'edyear' in member name 'Form1.edyear' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.edyear' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Form1_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="207">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'conx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="257">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'conx1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="210">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="260">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="209">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="259">In method 'Form1.Form1_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="conx1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="257">'Form1.Form1_Load(object, EventArgs)' declares a variable, 'conx1', of type 'SQLiteConnection', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="260">Be sure to set the DataTable Locale property wherever 'Form1.Form1_Load(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gotrate" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="gotrate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'gotrate' in member name 'Form1.gotrate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.gotrate' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hook2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.hook2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hookup" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.hookup' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inccrcase" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inccrcase" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inccrcase' in member name 'Form1.inccrcase' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inccrcase' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incert1a" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="incert" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incert' in member name 'Form1.incert1a' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incert1a' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incert1b" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="incert" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incert' in member name 'Form1.incert1b' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incert1b' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incertmail" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="incertmail" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incertmail' in member name 'Form1.incertmail' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incertmail' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inch1a" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inch1a' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inch1b" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inch1b' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inch2a" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inch2a' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inch2b" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inch2b' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incharge1desc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'desc' in member name 'Form1.incharge1desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="incharge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incharge' in member name 'Form1.incharge1desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incharge1desc' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incharge2desc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'desc' in member name 'Form1.incharge2desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="incharge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incharge' in member name 'Form1.incharge2desc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incharge2desc' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incrash1a" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="incrash" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incrash' in member name 'Form1.incrash1a' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incrash1a' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incrash1b" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="incrash" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incrash' in member name 'Form1.incrash1b' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incrash1b' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#incrashfilm" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="incrashfilm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'incrashfilm' in member name 'Form1.incrashfilm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.incrashfilm' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#indate" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="indate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'indate' in member name 'Form1.indate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.indate' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#indaterelease" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="indaterelease" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'indaterelease' in member name 'Form1.indaterelease' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.indaterelease' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#infirst" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="infirst" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'infirst' in member name 'Form1.infirst' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.infirst' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inhook" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inhook" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inhook' in member name 'Form1.inhook' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inhook' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inid" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inid' in member name 'Form1.inid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inid' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inisbike" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inisbike" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inisbike' in member name 'Form1.inisbike' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inisbike' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#iniscar" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="iniscar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'iniscar' in member name 'Form1.iniscar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.iniscar' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1442">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CCR/Case".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1454">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Charge1Desc".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1458">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Charge2Desc".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="657">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "First".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1354">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "First".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1422">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LaborCharge".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="662">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Last".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1359">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Last".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1450">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lienholder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1438">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot/Keys".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="667">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Make".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1364">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Make".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1418">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MilesTowed".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="672">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Model".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1369">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Model".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="701">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Notes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1398">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Notes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1426">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OtherCharge1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1430">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OtherCharge2".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1406">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OwnerAddress".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1410">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OwnerCity".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="681">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Phone1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1378">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Phone1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="686">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Phone2".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1383">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Phone2".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="706">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ReleaseDate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1402">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ReleaseDate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1414">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TAG#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="696">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Time".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1393">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Time".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1446">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TowedFrom".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="691">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "VIN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1388">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "VIN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1434">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Wrecker#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="677">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Year".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1374">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Year".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="652">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "id".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1349">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ColumnHeader.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "id".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1216">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "7600 Bailey Body Rd, Jacksonville, FL 32216".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="792">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add New Customer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="909">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Add. Winch".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1180">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CCR/Case".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="879">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Car/Truck/Van".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="889">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Certified Mail".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1495">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Color".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="899">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Crash Film".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1466">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Create Record".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="586">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Edit Selected".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1572">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "First Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="918">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Generate Invoice".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1081">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Labor Charge".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1563">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Last Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="961">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lien Holder".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="978">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot/Keys".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1553">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Make".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1544">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Model".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="868">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Motorcycle".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1072">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Other Charges (1)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1033">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Other Charges (2)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="945">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Owner Address".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="929">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Owner City/ZIP".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1504">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Phone (primary)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="248">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Rates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="851">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Reason for Tow".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="556">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Search Make/Model".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="576">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Search Name".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="478">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Search Notes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="566">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Search Phone#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="596">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Search VIN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="524">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Search Year".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="469">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Search or Modify Existing Entries".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1235">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Services/Notes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="277">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set Additional Winching Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="369">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set Car Storage Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="257">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set Certified Mail / Admin Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="267">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set Crash Film Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="389">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set Hookup Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="379">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set Mileage Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="341">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Set Motorcycle Storage Rate".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="714">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Show Recent".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1164">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TAG#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="803">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tag State/Expire".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1594">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Thompson Enterprises - Towing Data Manager".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1226">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Thompson Enterprises".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1148">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tow Location".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1196">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Towing Date".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1126">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Towing Miles".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1486">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "VIN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="819">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Vehicle Towable".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="835">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Vehicle on HOLD".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="994">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Wrecker Driver".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1010">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Wrecker#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1535">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Year".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DateTimePicker.set_CustomFormat(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1472">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DateTimePicker.CustomFormat.set(string)'. Retrieve the following string(s) from a resource table instead: "M/d/yy HH:mm".</Issue>
            </Message>
            <Message Id="LaborCharge" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1422">Correct the spelling of the unrecognized token 'LaborCharge' in the literal '"LaborCharge"'.</Issue>
            </Message>
            <Message Id="MilesTowed" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1418">Correct the spelling of the unrecognized token 'MilesTowed' in the literal '"MilesTowed"'.</Issue>
            </Message>
            <Message Id="OwnerAddress" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1406">Correct the spelling of the unrecognized token 'OwnerAddress' in the literal '"OwnerAddress"'.</Issue>
            </Message>
            <Message Id="OwnerCity" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1410">Correct the spelling of the unrecognized token 'OwnerCity' in the literal '"OwnerCity"'.</Issue>
            </Message>
            <Message Id="ReleaseDate" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="706">Correct the spelling of the unrecognized token 'ReleaseDate' in the literal '"ReleaseDate"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1402">Correct the spelling of the unrecognized token 'ReleaseDate' in the literal '"ReleaseDate"'.</Issue>
            </Message>
            <Message Id="TowedFrom" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1446">Correct the spelling of the unrecognized token 'TowedFrom' in the literal '"TowedFrom"'.</Issue>
            </Message>
            <Message Id="yy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.Designer.cs" Line="1472">Correct the spelling of the unrecognized token 'yy' in the literal '"M/d/yy HH:mm"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inlaborcharge" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inlaborcharge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inlaborcharge' in member name 'Form1.inlaborcharge' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inlaborcharge' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inlast" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inlast" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inlast' in member name 'Form1.inlast' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inlast' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inlienholder" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inlienholder" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inlienholder' in member name 'Form1.inlienholder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inlienholder' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inlotkeys" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inlotkeys" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inlotkeys' in member name 'Form1.inlotkeys' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inlotkeys' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inmake" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inmake" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inmake' in member name 'Form1.inmake' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inmake' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inmodel" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inmodel" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inmodel' in member name 'Form1.inmodel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inmodel' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#innotes" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="innotes" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'innotes' in member name 'Form1.innotes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.innotes' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inother1charge" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inother" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inother' in member name 'Form1.inother1charge' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inother1charge' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inother2charge" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inother" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inother' in member name 'Form1.inother2charge' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inother2charge' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inownadd" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inownadd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inownadd' in member name 'Form1.inownadd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inownadd' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inowncit" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inowncit" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inowncit' in member name 'Form1.inowncit' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inowncit' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inph1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inph" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inph' in member name 'Form1.inph1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inph1' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inph2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inph" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inph' in member name 'Form1.inph2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inph2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#instore" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="instore" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'instore' in member name 'Form1.instore' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.instore' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intagex" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="intagex" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'intagex' in member name 'Form1.intagex' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.intagex' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intagn" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="intagn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'intagn' in member name 'Form1.intagn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.intagn' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intowable" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="intowable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'intowable' in member name 'Form1.intowable' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.intowable' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intowaddress" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="intowaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'intowaddress' in member name 'Form1.intowaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.intowaddress' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intowhold" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="intowhold" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'intowhold' in member name 'Form1.intowhold' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.intowhold' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intowmiles" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="intowmiles" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'intowmiles' in member name 'Form1.intowmiles' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.intowmiles' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intowreason" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="intowreason" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'intowreason' in member name 'Form1.intowreason' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.intowreason' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#invin" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="invin" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'invin' in member name 'Form1.invin' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.invin' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inwinch1a" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inwinch" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inwinch' in member name 'Form1.inwinch1a' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inwinch1a' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inwinch1b" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inwinch" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inwinch' in member name 'Form1.inwinch1b' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inwinch1b' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inwinched" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inwinched" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inwinched' in member name 'Form1.inwinched' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inwinched' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inwreckdriver" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inwreckdriver" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inwreckdriver' in member name 'Form1.inwreckdriver' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inwreckdriver' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inwrecknum" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inwrecknum" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inwrecknum' in member name 'Form1.inwrecknum' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inwrecknum' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inyear" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="inyear" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'inyear' in member name 'Form1.inyear' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.inyear' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#listView_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1466">In method 'Form1.listView_MouseDoubleClick(object, MouseEventArgs)', call System.IDisposable.Dispose on object 'f2' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#listView1_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1510">In method 'Form1.listView1_MouseDoubleClick(object, MouseEventArgs)', call System.IDisposable.Dispose on object 'f2' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#storage" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.storage' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#store2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.store2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tabcontrol1_selectedindexchanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1721">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', object 'conx2' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'conx2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1619">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'conx' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1672">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'conx1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1622">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1675">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1723">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'getrate1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1733">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'getrate2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1743">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'getrate3' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1754">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'getrate4' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1764">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'getrate5' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1774">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'getrate6' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1784">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'getrate7' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1621">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1674">In method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)', call System.IDisposable.Dispose on object 'recententry' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1740">Object 'conx2' can be disposed more than once in method 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1740, 1750, 1761, 1771, 1781, 1791</Issue>
            </Message>
            <Message Id="System.Decimal.TryParse(System.String,System.Decimal@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1728">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1738">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1748">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1759">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1769">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1779">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1789">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' calls 'decimal.TryParse(string, out decimal)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="conx1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1672">'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' declares a variable, 'conx1', of type 'SQLiteConnection', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\visualstudio\Projects\geometric\WindowsFormsApplication1\WindowsFormsApplication1" File="Form1.cs" Line="1675">Be sure to set the DataTable Locale property wherever 'Form1.tabcontrol1_selectedindexchanged(object, EventArgs)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#timer1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Form1.timer1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#towmile" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towmile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'towmile' in member name 'Form1.towmile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.towmile' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#towmile2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towmile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'towmile' in member name 'Form1.towmile2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.towmile2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winch2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-09-30 15:04:35Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Form1.winch2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1740, 1750, 1761, 1771, 1781, 1791</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="AssemblyMoreMeaningfulName">Consider providing a more meaningful name than assembly name {0}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
